options
{
  JDK_VERSION = "1.5";
  DEBUG_PARSER = false;
  DEBUG_TOKEN_MANAGER = false;
}

PARSER_BEGIN(InterpretadorDeExpressoesAritmeticasComoCalculadora)
package Exe4;
import java.io.*;

public class InterpretadorDeExpressoesAritmeticasComoCalculadora
{
  public static void main(String args []) throws ParseException
  {
    InterpretadorDeExpressoesAritmeticasComoCalculadora analisador = null;
    try
    {
      analisador = new InterpretadorDeExpressoesAritmeticasComoCalculadora(new FileInputStream("prog_fonte.my"));
      analisador.inicio();
    }
    catch (FileNotFoundException e)
    {
      System.out.println("Erro: arquivo n\u00e3o encontrado");
    }
    catch (TokenMgrError e)
    {
      System.out.println("Erro l\u00e9xico\n" + e.getMessage());
    }
    catch (ParseException e)
    {
      System.out.println("Erro sint\u00e1tico\n" + e.getMessage());
    }
  }
}

PARSER_END(InterpretadorDeExpressoesAritmeticasComoCalculadora)

SKIP :
{
  " "
| "\t"
| "\r"
| "\n"
}

TOKEN [ IGNORE_CASE ] :
{
  < OP_LOGICO_PASCAL :
    (
      "AND"
    | "OR"
    | "NOT"
    | "XOR "
    ) >
}

TOKEN :
{
  < IDENT :
    (
      "/*"
      (
        "a"
      | "b"
      | "d"
      | "f"
      | "g"
      | "h"
      | "i"
      | "j"
      | "k"
      | "l"
      | "m"
      | "n"
      | "o"
      | "p"
      | "q"
      | "r"
      | "s"
      | "t"
      | "v"
      | "x"
      | "z"
      | "w"
      | "k"
      | "y"
      )
    | [ "a"-"z" ] [ "a"-"z" ]
    )
    ([ "a"-"z" ])* "*/" >
| 
  < ATRIB : ":=" >
| 
  < IGUAL : "=" >
| 
  < REAL : ([ "0"-"9" ])* (".")? ([ "0"-"9" ])+ >
| 
  < HEXADECIMAL :
    "0"
    (
      "x"
    | "X"
    )
    ([ "0"-"9", "A"-"F", "a"-"f" ])+ >
| 
  < VARIAVEL : ([ "A"-"Z", "a"-"z" ]) ([ "A"-"Z", "a"-"z", "0"-"9" ])* >
| 
  < OP_LOGICO_JAVA :
    "&&"
  | "||"
  | "!" >
| 
  < OP_RELACIONAL :
    ">"
  | ">="
  | "<"
  | "<=" >
| 
  < OP_RELACIONAL_JAVA :
    "!="
  | "==" >
| 
  < OP_RELACIONAL_PASCAL : "<>" >
| 
  < ABRE_PARENTESES : "(" >
| 
  < FECHA_PARENTESES : ")" >
| 
  < ADICAO : "+" >
|
  < POT : "**" >
|
  < SUBTRACAO : "-" >
| 
  < MULTIPLICACAO : "*" >
| 
  < DIVISAO : "/" >
| 
  < MODULO : " %" >
| 
  < PT_VIRG : ";" >
}

void inicio() :
{
  double resultado;
}
{
  resultado = expressao() < EOF >
  {
    System.out.println(resultado);
  }
}

double expressao() :
{
  double a, b;
  Token t;
}
{
  a = termo()
  (
    < ADICAO > b = termo()
    {
      a = a + b;
    }
  | 
    < SUBTRACAO > b = termo()
    {
      a = a - b;
    }
  )*

  {
    return a;
  }
}

double termo() :
{
  double a, b;
  Token t;
}
{
  a = fator()
  (
    <POT> b = fator()
  {
      a = Math.pow(a, b);
    }
  | 
    < MULTIPLICACAO > b = fator()
    {
      a = a * b;
    }
  | 
    < DIVISAO > b = fator()
    {
      a = a / b;
    }
  | 
    < MODULO > b = fator()
    {
      a = a % b;
    }
  )*
  {System.out.println(a+" > termo");
 
    return a;
  }
}

double fator() :
{
  Token t;
  double res;
}

{
  t = < REAL >
  {System.out.println(t+" > fator");
    return Double.parseDouble(t.image);
  }
| 
  < ABRE_PARENTESES > res = expressao() < FECHA_PARENTESES >
  {System.out.println(res+" > expressao");
    return res;
  }
}
